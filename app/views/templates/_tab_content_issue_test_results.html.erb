<div id="test_result_kod_surumleri">

  <%== tests.empty? ? "<p>#{l(:no_associated_tests)}</p>" : "" %>
  <%== issue.changesets.empty? ? "<p>#{l(:no_associated_code_revision)}</p>" : "" %>


  <%
    kiwi_info = UlakTest::PluginSetting.get_kiwi_settings
    issue.changesets.each do |changeset| 
  %>
      <h3>
          <div class="left">
            <abbr title="<%= changeset.repository.url %>">
              <%= "#{l(:label_revision)} #{changeset.format_identifier}" %>
            </abbr>
            <% if changeset.filechanges.any? && User.current.allowed_to?(:browse_repository, changeset.project) %>
              (<%= link_to(l(:label_diff),
                           controller: "repositories",
                           action: "diff",
                           id: changeset.project,
                           repository_id: changeset.repository.identifier_param,
                           path: "",
                           rev: changeset.identifier) %>)
            <% end %>
          </div><!-- div.class="left"-->

        <div class="right">
          <div>
            <%= avatar(changeset.user, size: "24") %>
            <%= authoring changeset.committed_on, changeset.author, label: :label_added_time_by %>
          </div>
        </div><!-- div.class="right"-->
      </h3>
      <div id="div_revision-<%= changeset.id %>" class="splitcontent" style="background-color:#e5eaef">
        <div class="splitcontentleft">
          <div class="wiki changeset-comments"><%= format_changeset_comments changeset %></div>
          <div class="wiki changeset-comments">
            <% unless tests.empty? %>
              <b><%= l(:field_issue_tests) %> :</b><br/>
              <ol class="test_case_list">
                <% tests.each do |test| %>
                  <li data-case-id="<%= test.test_case_id %>">
                    <span class="test-case c-pill" title="">
                        <a href='<%= "#{kiwi_info[:kiwi_url]}/case/#{test.test_case_id}" %>' _target="_blank"><%= test.summary %></a>
                        <span class="test-case-result idle"></span>
                        <span class="test-case-result running"></span>
                        <span class="test-case-result paused"></span>
                        <span class="test-case-result passed"></span>
                        <span class="test-case-result failed"></span>
                        <span class="test-case-result blocked"></span>
                        <span class="test-case-result error"></span>
                        <span class="test-case-result waived"></span>
                    </span>
                  </li>
                <% end %>
              </ol>
            <% end %>
          </div>

        </div><!-- /splitcontentleft -->

        <div class="splitcontentright">
          <div class="wiki changeset-comments">
            <label for="revision_tags-<%= changeset.id %>" style="font-weight: bold;">
              <%= l(:label_issue_code_artifacts_tags) %>: 
            </label>
            <select id="select_tag_revision-<%= changeset.id %>">
              <option value=""><%= l(:option_issue_code_artifacts_choose) %></option>
              <% 
              begin
                tag_info = UlakTest::Git.commit_tags(changeset.repository.url, changeset.identifier) 
              rescue StandartError => e 
                javascript_tag do %>
                  alert('İstisna alındı: <%= e.message %>');
              <% end 
              end %>
              <%= options_for_select(tag_info.map { |tag| ["#{tag[:date]}", tag[:tag]] }) %>
            </select>
            <div class="test_result_placeholder"></div>
          </div>
        </div><!-- /splitcontentright -->

      </div><!-- /splitcontent -->
  <% end %>
</div>



<script>
  $(function(){
    console.log(">>>> select2 için bıdı bıdı")
    function templateTagOption(item){
        if (!item.id) {
          return item.text;
        }
        var $date = $('<b>' + item.id + '</b> ');
        var $tag = $('<em style="float:right;display:block;">' + item.text + '</em>');
        var $div = $('<div/>').append($date).append($tag);
        return $div
    }

    $('[id^="select_tag_revision-"]').select2({
        width:"350px",
        templateResult: templateTagOption,
        templateSelection: templateTagOption
    }).on('select2:select', function (e) {
      console.log(">>>>> ",e.params.data);
      if(!e.params.data){
        return console.log(">>>>> Dolu bir seçenek seçilmedi!");
      }
      const $select = $(this)
      const select_id = this.id
      const changeset_id = $(this).attr("id").split('-')[1]
      const selected_tag = e.params.data.id
      const url = `/<%= $NAME_KIWI_TESTS %>/issues/<%=issue_id%>/tab/test_results/changesets/${changeset_id}/tags?tag=${selected_tag}`
      $.get( url, function( data ) {
        console.log(">>> TAG seçildi .... ");
        $("div.test_run_list").each(function(idx, div){
          $(div).html('')
        })

        // ".test_case_list" içindeki tüm <li> elemanlarını seçin ve bir döngüye sokun
        $(".test_case_list li").each(function() {
          // <li> elemanı içindeki <span> elemanını seçin
          var spanElement = $(this).find("span");
          
          // <span> elemanının sınıflarını alın ve dizi olarak kaydedin
          var classList = spanElement.attr("class").split(" ");

          // Dizi içindeki sınıfların her birini kontrol edin
          classList.forEach(function(className) {
            // Eğer sınıf "c-pill--" ile başlıyorsa, o sınıfı çıkarın
            if (className == 'test-case-result') {
              spanElement.html('');
            }

            if (className.startsWith("c-pill--")) {
              spanElement.removeClass(className);
            }
          });
        });

        $(`[id^="select_tag_revision-"]:not(#${select_id})`).each(function(idx, select){
          $(select).val("").trigger("change");
        })

        $ph_test_result = $select.parent().find("div.test_result_placeholder")
        $ph_test_result && $ph_test_result.hide().html( data ).slideDown( "slow", function() {

          const createCaseObjectArray = function(){
            result = []
            $(".test_result_list li").each((idx, li)=>{
                $li = $(li)
                case_id = $li.data("case-id")
                case_run_status_name = $li.data("case-status-name")
                result.push({case_id, case_run_status_name })
            })
            return result
          }
          const groupByCaseRunStatus = function(arrCases){
            const groupedData = {};

            // Dizideki her bir nesne için işlem yapın
            arrCases.forEach(item => {
              const { case_id, case_run_status_name } = item;

              // Gruplama yapmak için 'case_id' anahtarını kullanın
              if (!groupedData[case_id]) {
                // Eğer 'case_id' anahtarı henüz oluşturulmamışsa, yeni bir nesne oluşturun
                groupedData[case_id] = {
                  idle: 0,
                  running: 0,
                  paused: 0,
                  passed: 0,
                  failed: 0,
                  blocked: 0,
                  error: 0,
                  waived: 0,
                };
              }

              // İlgili 'case_run_status_name' alanını artırın
              groupedData[case_id][case_run_status_name]++;
            });
            return groupedData;
          }

          const arr = createCaseObjectArray()
          const groupedData = groupByCaseRunStatus(arr)

          const arrCaseRunStatus = ["idle","running","paused","passed","failed","blocked","error","waived"]
          $(".test_case_list li").each((idx, li)=>{

            $li = $(li)
            case_id = $li.data("case-id")
            foundCase = arr.filter(a=>a.case_id == case_id)[0]
            if ( foundCase ) {
              lastStatusOfCaseRun = foundCase["case_run_status_name"]
              $li.find("span").eq(0).addClass(`c-pill--${lastStatusOfCaseRun}`)
            }

            for(var status of arrCaseRunStatus) {
              $span = $li.find(`.test-case-result.${status}`)
              let val = (groupedData && groupedData[case_id]) ? groupedData[case_id][`${status}`] : ''
              $span.html(val ? val : '')
            }
          })
        });

      });
    });

    $( "#test_result_kod_surumleri" ).accordion({
      heightStyle: "content"
    });
  });
</script>
